podTemplate(
  label: 'parent',
  containers:
  [
    containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.12', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm:v2.8.0', command: 'cat', ttyEnabled: true),
  ],
  volumes: [hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')],
  serviceAccount: 'jenkins',
  namespace: 'jenkins')
{
  node ('parent')
  {
    def dockerBuild
    try
    {
      stage('Clone repository')
      {
        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm
        dir('hazel-chart'){
          git url: "https://github.com/ebalsumgo/charts.git"
        }
      }
      stage('Initialize Helm')
      {
        container('helm')
        {
          sh 'helm init --client-only'
        }
      }
      stage('Install Hazelcast')
      {
        container('helm')
        {
          sh 'cd hazel-chart/stable/hazelcast-enterprise/; helm install --set hazelcast.licenseKey=${HAZEL_LICENSE},cluster.memberCount=3,service.clusterIP="None",mancenter.service.type=ClusterIP,mancenter.service.clusterIP="None",mancenter.licenseKey=${MAN_CENTER_HAZEL_LICENSE} --name demo .'
        }
      }
      stage('Wait for everything to come up')
      {
        sh '
        while true ; do
          printf "."
          result=$(kubectl get pods | grep "demo-hazelcast-enterprise-" | grep -c "Running")
          # We want a minimum of 3 pods, plus the extra header line
          # it would be more headache to parse it out than its worth
          if [ "$result"  -ge 4 ] ; then
              echo " "
              break
          fi
          sleep 1
        done'
      }
    }
  }
}
